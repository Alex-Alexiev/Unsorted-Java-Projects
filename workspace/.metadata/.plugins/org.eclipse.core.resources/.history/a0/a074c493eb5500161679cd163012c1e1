import processing.core.PApplet;
import processing.core.PVector;

import java.awt.Color;
import java.util.ArrayList;

public class Asteroids_Basis extends PApplet {

	public static void main(String[] args) {
		PApplet.main("Asteroids_Basis");
	}

	public void settings() {
		size(1000, 700);
	}

	ArrayList<Asteroids> asteroids;
	ArrayList<Projectiles> shots;
	ArrayList<Integer> for_deletion;
	Score score;
	movingTriangle spaceship;
	movingText loseText;
	Projectiles shot;
	int b = 1;

	int num_of_asteroids = 5;

	public void setup() {
		surface.setResizable(true);
		frameRate(60);
		fill(255);
		for_deletion = new ArrayList<Integer>();
		asteroids = new ArrayList<Asteroids>();
		shots = new ArrayList<Projectiles>();
		for (int i = 0; i < num_of_asteroids; i++) {

			int negator = ((int) random(0, 1) == 0 ? -1 : 1);
			asteroids.add(new Asteroids(this, (int) random(30, width - 30), (int) random(30, height - 30), 100, 100,
					(int) random(1, 2) * negator, (int) random(1, 2) * negator, new Color(0, 0, 0),
					new Color(255, 255, 255), 5));
		}
		score = new Score(this, 0, width / 4, 50, 28, 0, 0, new Color(255, 255, 255), 3);

		loseText = new movingText(this, "YOU SUCK", width / 2, height / 2, 50, 0, 0, new Color(255, 255, 255), 3);

		PVector[] vertices = new PVector[] { new PVector(width / 2, height / 2),
				new PVector(width / 2 + 10, height / 2 + 30), new PVector(width / 2 - 10, height / 2 + 30) };
		spaceship = new movingTriangle(this, vertices, new PVector(0, 1), (float) 0.0, (float) 0.0, new Color(0, 0, 0),
				new Color(255, 255, 255), 2);

		int negator = ((int) random(0, 1) == 0 ? -1 : 1);

		shot = new Projectiles(this, 10, 10, 10, 10, (int) random(1, 2) * negator, (int) random(1, 2) * negator,
				new Color(0, 0, 0), new Color(255, 255, 255), 5);
	}

	public void draw() {
		background(0);

		if (keyPressed) {
			if (key == 'a' || key == 'A') {
				spaceship.setAngleVelocity((float) -0.1);
			} else if (key == 'd' || key == 'D') {
				spaceship.setAngleVelocity((float) 0.1);
			}
			if (key == 'w' || key == 'W') {
				spaceship.setVelMag(-3);
			} else if (key == 's' || key == 'S') {
				spaceship.setVelMag(3);
			} else if (key == 'q' || key == 'Q') {

				shots.add(new Projectiles(this, (int) spaceship.getCom().x, (int) spaceship.getCom().y, 10, 10,
						(int) (-spaceship.getVelocity().x * 10), (int) (-spaceship.getVelocity().y * 10),
						new Color(255, 255, 255), new Color(255, 255, 255), 5));
				println(spaceship.getVelocity());
			}
		} else {
			spaceship.setAngleVelocity(0);
			spaceship.setVelMag(0);
		}
		for (Projectiles i : shots) {
			background(0);
			i.move();
			i.display();

			for (Asteroids q : asteroids) {

				if (q.overlaps(i)) {
					q.split();
				}

			}
		}

		for (int i = 0; i < asteroids.size(); i++) {
			asteroids.get(i).move();
			asteroids.get(i).display();
		}

		spaceship.move();
		spaceship.display();

		if (for_deletion.size() > 0) {
			for_deletion = new ArrayList<Integer>();
		}


		if (key == 'e') {
			exit();
		}
		if (key == 'b') {
			fill(20, 217, 167);
			text("Antonin Dolohov fired at your broom. The fight continues underwater", width / 2, 575);
			for (int i = 0; i < num_of_asteroids; i++) {
				int radius = (int) random(25, 50);
				asteroids.add(new Asteroids(this, (int) random(width / 4, 3 * width / 4),
						(int) random(height / 4, 3 * height / 4), radius, radius, (int) random(5, 15),
						(int) random(5, 15), new Color(50, 50, 50), new Color(255), 3));
			}
		}

		if (key == 'y') {
			fill(0, 255, 0);
			text("Voldemort looked into your head, he knows where you are", width / 2, 125);
			noStroke();
			fill(0);
			rect(b, 275, 50, 100);
			fill(50, 50, 50);
			ellipse(b + 25, 250, 50, 75);
			b += 2;
		}

		for (int i = 0; i < asteroids.size(); i++) {

			asteroids.get(i).move();
			asteroids.get(i).display();

			textAlign(CENTER);
			textSize(20);
			fill(255, 20, 147);
			text("Click on 'B' to activate the bonus level", width / 2, 25);
			fill(255, 0, 0);
			text("Click on 'E' to exit the game", width / 2, 50);
			fill(255, 165, 0);
			text("Click on 'Y' to turn off the trace", width / 2, 75);
			fill(20, 217, 118);
			text("You are leaving Number 3 Privet Drive.", width / 2, 600);
			fill(0, 255, 255);
			text("You might have the rest of the Order by your side but you still need to defend yourself ", width / 2,
					625);
			fill(50, 50, 255);
			text("Click on the space bar to shoot at the objects", width / 2, 650);
			fill(128, 50, 255);
			text("The rectangles are Death Eaters that can kill you. Shoot them too", width / 2, 675);
			fill(57, 173, 92);
			text("___________________________________________________________________", width / 2, height / 2);

		}

	}

}
